---
- name: Check Live Update Status
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Load variables from next_vars.yml
      include_vars:
        file: ../next_vars.yml

    - name: Login to BigIP Next and retrieve the access token
      uri:
        url: "https://{{ next.address }}/api/login"
        method: POST
        body_format: json
        body:
          username: "{{ next_user }}"
          password: "{{ next_password }}"
        headers:
          Content-Type: "application/json"
        validate_certs: no
      register: login_response
      failed_when: login_response.status != 200

    - name: Extract access token
      set_fact:
        access_token: "{{ login_response.json.access_token }}"

    - name: Check live update status
      uri:
        url: "https://{{ next.address }}/api/waf/v1/tasks/live-update/check-status"
        method: POST
        body_format: json
        body:
          install: false
        headers:
          Authorization: "Bearer {{ access_token }}"
          Content-Type: "application/json"
        validate_certs: no
      register: check_status_response
      failed_when:
        - check_status_response.status == 401  # Unauthorized
        - check_status_response.status != 200

    - name: Set task URL for polling
      set_fact:
        task_url: "{{ check_status_response.json._links.self.href }}"

    - name: Wait for live update pull task completion. Please wait, task completion might take up to 15 minutes
      next_task_polling_module:
        next_url: "{{ next.address }}"
        username: "{{ next_user }}"
        password: "{{ next_password }}"
        task_url: "{{ task_url }}"
        timeout: "{{ task_timeout_minutes }}"
      register: polling_result

    - name: Generate live update status report
      set_fact:
        downloaded_list: "{{ polling_result['data']['downloaded'] | default([]) }}"
        installed_list: "{{ polling_result['data']['installed'] | default([]) }}"

    - name: Combine lists
      set_fact:
        file_info: "{{ (downloaded_list | union(installed_list)) | list }}"

    - name: Save report to file
      ansible.builtin.copy:
        content: |
          {% if downloaded_list | length > 0 or installed_list | length > 0 %}
          Check live update: {{ polling_result.data.created }} -- {{ polling_result.data.completed }}
          Status: {{ polling_result.data.status }}
          {% if polling_result.data.failure_reason %}
          Failure reason: {{ polling_result.data.failure_reason }}
          {% endif %}
    
          +-----------------------------------------------+-----------------------+----------------------+
          | File                                          | Downloaded            | Installed            |
          +-----------------------------------------------+-----------------------+----------------------+
          {% for file in file_info %}
          | {{ (file[:42] + '...' if file | length > 45 else "%-45s" | format(file)) }} | {{ 'X' if file in downloaded_list else ' ' }}                     | {{ 'X' if file in installed_list else ' ' }}                    |
          {% endfor %}
          +-----------------------------------------------+-----------------------+----------------------+
          {% else %}
          BigIP Next Signature Sets are up to date
          {% endif %}
        dest: "{{ check_updates_report }}"
        mode: '0644'
